
import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 1a
 */
public class MonthlyPerformance extends javax.swing.JFrame {

    /**
     * Creates new form MonthlyPerformance
     */
    public MonthlyPerformance() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        month = new javax.swing.JTable();
        showBarChart = new javax.swing.JButton();
        createaccount = new javax.swing.JButton();
        needy_donor = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        month.setBackground(new java.awt.Color(204, 204, 204));
        month.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        month.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Month", "Number"
            }
        ));
        jScrollPane2.setViewportView(month);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 1090, 350));

        showBarChart.setBackground(new java.awt.Color(153, 153, 153));
        showBarChart.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        showBarChart.setText("ShowBarChart");
        showBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBarChartActionPerformed(evt);
            }
        });
        getContentPane().add(showBarChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 160, 300, 40));

        createaccount.setBackground(new java.awt.Color(102, 102, 102));
        createaccount.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        createaccount.setForeground(new java.awt.Color(255, 255, 255));
        createaccount.setText("Show Data In Table");
        createaccount.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 153), 3, true));
        createaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createaccountActionPerformed(evt);
            }
        });
        getContentPane().add(createaccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 300, 40));

        needy_donor.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        needy_donor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DONATIONS", "SUCESSFUL_DONATIONS", "REQUESTS" }));
        needy_donor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        needy_donor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                needy_donorActionPerformed(evt);
            }
        });
        getContentPane().add(needy_donor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 300, 40));

        jLabel16.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("MONTHLY REPORT");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, -10, 350, 90));

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 40, -1, -1));

        Clear.setBackground(new java.awt.Color(153, 153, 153));
        Clear.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        Clear.setText("ClearTable");
        Clear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 230, 120, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nevy3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 920));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createaccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createaccountActionPerformed
        // TODO add your handling code here:

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            java.sql.Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=charity_management;selectMethod=cursor", "sa", "123456");

            System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());
            Statement statement = connection.createStatement();

            {
                String value = (String) needy_donor.getSelectedItem();
                //  System.out.println(value);DONATIONS,SUCESSFUL_DONATIONS

                if (value.equals("DONATIONS")) {

                    try {

                     //   String sql = "SELECT MAX (DATENAME(MM,dateofdonation)) AS MONTHNAMES,COUNT (DATENAME(MM,dateofdonation)) AS m FROM DONATIONTABLE GROUP BY MONTH(dateofdonation) order by m DESC";
                        String sql = "SELECT  (DATENAME(MM,dateofdonation)) AS MONTHNAMES,COUNT (DATENAME(MM,dateofdonation)) AS m FROM DONATIONTABLE GROUP BY (DATENAME(MM,dateofdonation)) order by m DESC";

                        ResultSet rs = statement
                                .executeQuery(sql);
                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");
                            String SL = String.valueOf(rs.getInt("m"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else if (value.equals("SUCESSFUL_DONATIONS")) {
                    try {

                       // String sql = "SELECT MAX (DATENAME(MM,DonationDate)) AS MONTHNAMES,COUNT (DATENAME(MM,DonationDate)) AS m FROM RECORDS GROUP BY MONTH(DonationDate) order by m DESC";
 String sql = "SELECT  (DATENAME(MM,DonationDate)) AS MONTHNAMES,COUNT (DATENAME(MM,DonationDate)) AS m FROM RECORDS GROUP BY (DATENAME(MM,DonationDate)) order by m DESC";

                        ResultSet rs = statement
                                .executeQuery(sql);
                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");
                            String SL = String.valueOf(rs.getInt("m"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else if (value.equals("REQUESTS")) {
                    try {

                       // String sql = "SELECT MAX (DATENAME(MM,requestdate)) AS MONTHNAMES,COUNT (DATENAME(MM,requestdate)) AS m FROM request GROUP BY MONTH(requestdate) order by m DESC";
String sql = "SELECT (DATENAME(MM,requestdate)) AS MONTHNAMES,COUNT (DATENAME(MM,requestdate)) AS m FROM request GROUP BY (DATENAME(MM,requestdate)) order by m DESC";

                        ResultSet rs = statement
                                .executeQuery(sql);
                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");
                            String SL = String.valueOf(rs.getInt("m"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_createaccountActionPerformed

    private void needy_donorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_needy_donorActionPerformed
        // TODO add your handling code here:

        //String  s=
    }//GEN-LAST:event_needy_donorActionPerformed

    private void showBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBarChartActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            java.sql.Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=charity_management;selectMethod=cursor", "sa", "123456");

            System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());
            Statement statement = connection.createStatement();

            {
                String value = (String) needy_donor.getSelectedItem();
                //  System.out.println(value);DONATIONS,SUCESSFUL_DONATIONS

                if (value.equals("DONATIONS")) {

                    try {

                        String sql = "SELECT MAX (DATENAME(MM,dateofdonation)) AS MONTHNAMES,COUNT (DATENAME(MM,dateofdonation)) AS m FROM DONATIONTABLE GROUP BY MONTH(dateofdonation) order by MONTH(dateofdonation)";
//String sql = "SELECT  (DATENAME(MM,dateofdonation)) AS MONTHNAMES,COUNT (DATENAME(MM,dateofdonation)) AS m FROM DONATIONTABLE GROUP BY(DATENAME(MM,dateofdonation))order by MONTH(dateofdonation)";

                        ResultSet rs = statement
                                .executeQuery(sql);

                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");
                            //System.out.println(pname);

                            String SL = String.valueOf(rs.getInt("m"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);
                            //barChartdata.setValue(20000000,"jj","kk");

                        }
                        String tbData[] = {};
                        DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                        //Object j1,j2,f1,f2,m1,m2,a1,a2,ma1,ma2,jun1,jun2,jul1,jul2,au1,au2,s1,s2,o1,o2,n1,n2,d1,d2;
                        //                   Object j1 = tblModel.getValueAt(0, 0).toString();
                        //                   Object j2 = tblModel.getValueAt(0, 1).toString();

                        String[][] jan = new String[11][11];

                        String[][] feb = new String[11][11];
                        String[][] mar = new String[11][11];
                        String[][] ap = new String[11][11];

                        String[][] ma = new String[11][11];
                        String[][] ju = new String[11][11];
                        String[][] jul = new String[11][11];
                        String[][] au = new String[11][11];
                        String[][] sep = new String[11][11];
                        String[][] oc = new String[11][11];
                        String[][] nov = new String[11][11];
                        String[][] dec = new String[11][11];

                        // twoD_arr[12][12]="March";
                        int row = month.getRowCount();
                        int col = month.getColumnCount();
                        //System.out.println(row);
                        // System.out.println(col);

                        for (int i = 0; i < row; i++) {
                            for (int j = 0; j < col; j++) {

                                if (tblModel.getValueAt(i, j).toString().equals("January")) {

                                    jan[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("February")) {
                                    feb[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("March")) {
                                    mar[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("April")) {
                                    ap[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("May")) {
                                    ma[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("June")) {
                                    ju[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("July")) {
                                    jul[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("August")) {
                                    au[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("September")) {
                                    sep[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("October")) {
                                    oc[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(oc[i][1]);
                                } else if (tblModel.getValueAt(i, j).toString().equals("November")) {
                                    nov[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(nov[i][1]);

                                } else if (tblModel.getValueAt(i, j).toString().equals("December")) {
                                    dec[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(dec[i][1]);

                                }

                            }
                        }
                        //String s=month.getModel().getValueAt(row, 0).toString();
                        int january, february, march, april, may, june, july, august, september, october, november, december;
                        //System.out.println(mar[0][1]);
                        if (jan[0][1] == null) {
                            january = 0;
                        } else {
                            january = Integer.parseInt(jan[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (feb[0][1] == null) {
                            february = 0;
                        } else {
                            february = Integer.parseInt(feb[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (mar[0][1] == null) {
                            march = 0;
                        } else {
                            march = Integer.parseInt(mar[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ap[0][1] == null) {
                            april = 0;
                        } else {
                            april = Integer.parseInt(ap[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ma[0][1] == null) {
                            may = 0;
                        } else {
                            may = Integer.parseInt(ma[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ju[0][1] == null) {
                            june = 0;
                        } else {
                            june = Integer.parseInt(ju[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (jul[0][1] == null) {
                            july = 0;
                        } else {
                            july = Integer.parseInt(jul[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (au[0][1] == null) {
                            august = 0;
                        } else {
                            august = Integer.parseInt(au[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (sep[0][1] == null) {
                            september = 0;
                        } else {
                            september = Integer.parseInt(sep[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (oc[0][1] == null) {
                            october = 0;
                        } else {
                            october = Integer.parseInt(oc[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (nov[0][1] == null) {
                            november = 0;
                            System.out.println(november);

                        } else {
                            november = Integer.parseInt(nov[0][1]);
                            System.out.println(november);
                        }

                        if (dec[0][1] == null) {
                            december = 0;
                        } else {
                            december = Integer.parseInt(dec[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        //System.out.println(january);
                        // int a=Integer.parseInt(jan[0][1]);
                        //  System.out.println(a);
                        //System.out.println(oc[0][1]);    
                        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
                        //barChartdata.setValue(20000000,"jj","kk");

                        dataset.setValue(january, "", "January");
                        dataset.setValue(february, "", "February");
                        dataset.setValue(march, "", "March");
                        dataset.setValue(april, "", "April");

                        dataset.setValue(may, "", "May");
                        dataset.setValue(june, "", "June");
                        dataset.setValue(july, "", "July");
                        dataset.setValue(august, "", "August");

                        dataset.setValue(september, "", "September");
                        dataset.setValue(october, "", "October");
                        dataset.setValue(november, "", "November");
                        dataset.setValue(december, "", "December");

                        JFreeChart chart = ChartFactory.createBarChart("MonthWiseDonations", "MonthName", "NOofDonations", dataset, PlotOrientation.VERTICAL, false, true, false);
                        CategoryPlot catPlot = chart.getCategoryPlot();

                        catPlot.setRangeGridlinePaint(Color.BLACK);

                        ChartFrame frame = new ChartFrame("barchart", chart);
                        frame.setVisible(true);

                        frame.setSize(1050, 650);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }

                //////////////////////////////
                if (value.equals("SUCESSFUL_DONATIONS")) {

                    try {

                        String sql = "SELECT MAX (DATENAME(MM,donationdate)) AS MONTHNAMES,COUNT (DATENAME(MM,donationdate)) AS NO_OF_EMPLOYEES FROM records GROUP BY MONTH(donationdate) order by MONTH(donationdate)";

                        ResultSet rs = statement
                                .executeQuery(sql);

                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");
                            //System.out.println(pname);

                            String SL = String.valueOf(rs.getInt("NO_OF_EMPLOYEES"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);
                            //barChartdata.setValue(20000000,"jj","kk");

                        }
                        String tbData[] = {};
                        DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                        //Object j1,j2,f1,f2,m1,m2,a1,a2,ma1,ma2,jun1,jun2,jul1,jul2,au1,au2,s1,s2,o1,o2,n1,n2,d1,d2;
                        //                   Object j1 = tblModel.getValueAt(0, 0).toString();
                        //                   Object j2 = tblModel.getValueAt(0, 1).toString();

                        String[][] jan = new String[11][11];

                        String[][] feb = new String[11][11];
                        String[][] mar = new String[11][11];
                        String[][] ap = new String[11][11];

                        String[][] ma = new String[11][11];
                        String[][] ju = new String[11][11];
                        String[][] jul = new String[11][11];
                        String[][] au = new String[11][11];
                        String[][] sep = new String[11][11];
                        String[][] oc = new String[11][11];
                        String[][] nov = new String[11][11];
                        String[][] dec = new String[11][11];

                        // twoD_arr[12][12]="March";
                        int row = month.getRowCount();
                        int col = month.getColumnCount();
                        //System.out.println(row);
                        // System.out.println(col);

                        for (int i = 0; i < row; i++) {
                            for (int j = 0; j < col; j++) {

                                if (tblModel.getValueAt(i, j).toString().equals("January")) {

                                    jan[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("February")) {
                                    feb[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("March")) {
                                    mar[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("April")) {
                                    ap[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("May")) {
                                    ma[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("June")) {
                                    ju[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("July")) {
                                    jul[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("August")) {
                                    au[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("September")) {
                                    sep[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("October")) {
                                    oc[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(oc[i][1]);
                                } else if (tblModel.getValueAt(i, j).toString().equals("November")) {
                                    nov[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(nov[i][1]);

                                } else if (tblModel.getValueAt(i, j).toString().equals("December")) {
                                    dec[0][1] = tblModel.getValueAt(i, 1).toString();
                                    //System.out.println(dec[i][1]);

                                }

                            }
                        }
                        //String s=month.getModel().getValueAt(row, 0).toString();
                        int january, february, march, april, may, june, july, august, september, october, november, december;
                        //System.out.println(mar[0][1]);
                        if (jan[0][1] == null) {
                            january = 0;
                        } else {
                            january = Integer.parseInt(jan[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (feb[0][1] == null) {
                            february = 0;
                        } else {
                            february = Integer.parseInt(feb[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (mar[0][1] == null) {
                            march = 0;
                        } else {
                            march = Integer.parseInt(mar[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ap[0][1] == null) {
                            april = 0;
                        } else {
                            april = Integer.parseInt(ap[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ma[0][1] == null) {
                            may = 0;
                        } else {
                            may = Integer.parseInt(ma[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (ju[0][1] == null) {
                            june = 0;
                        } else {
                            june = Integer.parseInt(ju[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (jul[0][1] == null) {
                            july = 0;
                        } else {
                            july = Integer.parseInt(jul[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (au[0][1] == null) {
                            august = 0;
                        } else {
                            august = Integer.parseInt(au[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (sep[0][1] == null) {
                            september = 0;
                        } else {
                            september = Integer.parseInt(sep[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (oc[0][1] == null) {
                            october = 0;
                        } else {
                            october = Integer.parseInt(oc[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        if (nov[0][1] == null) {
                            november = 0;
                            System.out.println(november);

                        } else {
                            november = Integer.parseInt(nov[0][1]);
                            System.out.println(november);
                        }

                        if (dec[0][1] == null) {
                            december = 0;
                        } else {
                            december = Integer.parseInt(dec[0][1]);
                            //System.out.println(jan[0][1]);
                        }

                        //System.out.println(january);
                        // int a=Integer.parseInt(jan[0][1]);
                        //  System.out.println(a);
                        //System.out.println(oc[0][1]);    
                        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
                        //barChartdata.setValue(20000000,"jj","kk");

                        dataset.setValue(january, "", "January");
                        dataset.setValue(february, "", "February");
                        dataset.setValue(march, "", "March");
                        dataset.setValue(april, "", "April");

                        dataset.setValue(may, "", "May");
                        dataset.setValue(june, "", "June");
                        dataset.setValue(july, "", "July");
                        dataset.setValue(august, "", "August");

                        dataset.setValue(september, "", "September");
                        dataset.setValue(october, "", "October");
                        dataset.setValue(november, "", "November");
                        dataset.setValue(december, "", "December");

                        JFreeChart chart = ChartFactory.createBarChart("MonthWiseDonations", "MonthName", "NOofDonations", dataset, PlotOrientation.VERTICAL, false, true, false);
                        CategoryPlot catPlot = chart.getCategoryPlot();

                        catPlot.setRangeGridlinePaint(Color.BLACK);

                        ChartFrame frame = new ChartFrame("barchart", chart);
                        frame.setVisible(true);

                        frame.setSize(1050, 650);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }

                if (value.equals("REQUESTS")) {

                    try {

                        String sql = "SELECT MAX (DATENAME(MM,requestdate)) AS MONTHNAMES,COUNT (DATENAME(MM,requestdate)) AS NO_OF_EMPLOYEES FROM request GROUP BY MONTH(requestdate) order by MONTH(requestdate)";

                        ResultSet rs = statement
                                .executeQuery(sql);

                        while (rs.next()) {
                            String pname = rs.getString("MONTHNAMES");

                            String SL = String.valueOf(rs.getInt("NO_OF_EMPLOYEES"));
                            String tbData[] = {pname, SL};
                            DefaultTableModel tblModel = (DefaultTableModel) month.getModel();
                            tblModel.addRow(tbData);

                        }
                        String tbData[] = {};
                        DefaultTableModel tblModel = (DefaultTableModel) month.getModel();

                        Object j1 = tblModel.getValueAt(0, 0).toString();
                        Object j2 = tblModel.getValueAt(0, 1).toString();
                        String[][] jan = new String[11][11];
                        String[][] feb = new String[11][11];
                        String[][] mar = new String[11][11];
                        String[][] ap = new String[11][11];
                        String[][] ma = new String[11][11];
                        String[][] ju = new String[11][11];
                        String[][] jul = new String[11][11];
                        String[][] au = new String[11][11];
                        String[][] sep = new String[11][11];
                        String[][] oc = new String[11][11];
                        String[][] nov = new String[11][11];
                        String[][] dec = new String[11][11];

                        int row = month.getRowCount();
                        int col = month.getColumnCount();

                        for (int i = 0; i < row; i++) {
                            for (int j = 0; j < col; j++) {

                                if (tblModel.getValueAt(i, j).toString().equals("January")) {

                                    jan[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("February")) {
                                    feb[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("March")) {
                                    mar[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("April")) {
                                    ap[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("May")) {
                                    ma[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("June")) {
                                    ju[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("July")) {
                                    jul[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("August")) {
                                    au[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("September")) {
                                    sep[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("October")) {
                                    oc[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("November")) {
                                    nov[0][1] = tblModel.getValueAt(i, 1).toString();

                                } else if (tblModel.getValueAt(i, j).toString().equals("December")) {
                                    dec[0][1] = tblModel.getValueAt(i, 1).toString();

                                }

                            }
                        }

                        int january, february, march, april, may, june, july, august, september, october, november, december;

                        if (jan[0][1] == null) {
                            january = 0;
                        } else {
                            january = Integer.parseInt(jan[0][1]);

                        }

                        if (feb[0][1] == null) {
                            february = 0;
                        } else {
                            february = Integer.parseInt(feb[0][1]);

                        }

                        if (mar[0][1] == null) {
                            march = 0;
                        } else {
                            march = Integer.parseInt(mar[0][1]);

                        }

                        if (ap[0][1] == null) {
                            april = 0;
                        } else {
                            april = Integer.parseInt(ap[0][1]);

                        }

                        if (ma[0][1] == null) {
                            may = 0;
                        } else {
                            may = Integer.parseInt(ma[0][1]);

                        }

                        if (ju[0][1] == null) {
                            june = 0;
                        } else {
                            june = Integer.parseInt(ju[0][1]);

                        }

                        if (jul[0][1] == null) {
                            july = 0;
                        } else {
                            july = Integer.parseInt(jul[0][1]);

                        }

                        if (au[0][1] == null) {
                            august = 0;
                        } else {
                            august = Integer.parseInt(au[0][1]);

                        }

                        if (sep[0][1] == null) {
                            september = 0;
                        } else {
                            september = Integer.parseInt(sep[0][1]);
                        }

                        if (oc[0][1] == null) {
                            october = 0;
                        } else {
                            october = Integer.parseInt(oc[0][1]);

                        }

                        if (nov[0][1] == null) {
                            november = 0;

                        } else {
                            november = Integer.parseInt(nov[0][1]);
                        }

                        if (dec[0][1] == null) {
                            december = 0;
                        } else {
                            december = Integer.parseInt(dec[0][1]);
                        }

                        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

                        dataset.setValue(january, "", "January");
                        dataset.setValue(february, "", "February");
                        dataset.setValue(march, "", "March");
                        dataset.setValue(april, "", "April");
                        dataset.setValue(may, "", "May");
                        dataset.setValue(june, "", "June");
                        dataset.setValue(july, "", "July");
                        dataset.setValue(august, "", "August");
                        dataset.setValue(september, "", "September");
                        dataset.setValue(october, "", "October");
                        dataset.setValue(november, "", "November");
                        dataset.setValue(december, "", "December");

                        JFreeChart chart = ChartFactory.createBarChart("MonthWiseRequests", "Month_Name", "NO_of_Requests", dataset, PlotOrientation.VERTICAL, false, true, false);
                        CategoryPlot catPlot = chart.getCategoryPlot();
                        catPlot.setRangeGridlinePaint(Color.BLACK);
                        ChartFrame frame = new ChartFrame("barchart", chart);
                        frame.setVisible(true);

                        frame.setSize(1050, 650);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:


    }//GEN-LAST:event_showBarChartActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        AdminTop d = new AdminTop();
        d.show();
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

        // String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
        month.setModel(new DefaultTableModel(null, new String[]{"Month", "Number"}));
        //tblModel.addRow(tbData);
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthlyPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthlyPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthlyPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthlyPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonthlyPerformance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton createaccount;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable month;
    private javax.swing.JComboBox<String> needy_donor;
    private javax.swing.JButton showBarChart;
    // End of variables declaration//GEN-END:variables
}
