
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lenovo
 */
public class SearchProduct extends javax.swing.JFrame {
    String q;
 String u,a,e;
    /**
     * Creates new form SearchProduct
     */
    public SearchProduct() {
        initComponents();
    }
    
     public SearchProduct(String id) {
        initComponents();
        ID.setText(id);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productComb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Search_P = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        Clear = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        qty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productComb.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        productComb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electronics", "Food", "Groceries", "Furniture", "Electronics and Food", "Electronics and Groceries", "Electronics and Furniture", "Food and Groceries", "Others" }));
        productComb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productCombActionPerformed(evt);
            }
        });
        getContentPane().add(productComb, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 330, 30));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter Quantity");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 280, 60));

        Search_P.setBackground(new java.awt.Color(153, 153, 153));
        Search_P.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        Search_P.setText("Search");
        Search_P.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Search_P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_PActionPerformed(evt);
            }
        });
        getContentPane().add(Search_P, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 90, 180, 40));

        searchTable.setBackground(new java.awt.Color(204, 204, 204));
        searchTable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "productid", "productType", "productname", "quantity", "dateofdonation", "Donor_id"
            }
        ));
        jScrollPane1.setViewportView(searchTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 1090, 310));

        Clear.setBackground(new java.awt.Color(153, 153, 153));
        Clear.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        Clear.setText("ClearTable");
        Clear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 150, 40));

        ok.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        ok.setText("Send Request");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        getContentPane().add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, 190, 30));

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 320, 40));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search By Product Type : ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 300, 40));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Id No.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 270, 20));

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 60, -1));

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        getContentPane().add(qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 320, 40));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter Needed Product Id : ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 280, 60));

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nevy3.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1090, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Search_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_PActionPerformed
        
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=charity_management;selectMethod=cursor", "sa", "123456");

            System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            

            
            String value= (String)productComb.getSelectedItem();
            
            
            
            
            if(value.equals("Electronics"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable intersect\n" +
"(select * from donationTABLE where producttype like '%electronics%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
            
            }}
            
             if(value.equals("Others"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable intersect\n" +
"(select * from donationTABLE where producttype like '%Others%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
            
            }}
             if(value.equals("Food"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable intersect\n" +
"(select * from donationTABLE where producttype like '%Food%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
            
            }}
               
            if(value.equals("Groceries"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable intersect\n" +
"(select * from donationTABLE where producttype like '%Groceries%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));               
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            
            }}
            
               
            if(value.equals("Furniture"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable intersect\n" +
"(select * from donationTABLE where producttype like '%furniture%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));               
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            
            }}
            
            
            if(value.equals("Electronics and Food"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable  where producttype like '%electronics%' union\n" +
"(select * from donationTABLE where producttype like '%food%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            
            }}
            
             if(value.equals("Electronics and Groceries"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable  where producttype like '%electronics%' union\n" +
     "(select * from donationTABLE where producttype like '%groceries%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
            
            }}
            
               
               
              if(value.equals("Electronics and Furniture"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable  where producttype like '%electronics%' union\n" +
"(select * from donationTABLE where producttype like '%furniture%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            
            }}

                if(value.equals("Electronics and Furniture"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable  where producttype like '%electronics%' union\n" +
"(select * from donationTABLE where producttype like '%furniture%')     ");

            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            
            }}

               
            if(value.equals("Food and Groceries"))
            {
                  ResultSet rs = statement
                    .executeQuery("SELECT * FROM donationTable  where producttype like '%food%' union\n" +
"(select * from donationTABLE where producttype like '%groceries%')     ");
            
            while (rs.next()) {
                String p_id=String.valueOf(rs.getInt("productid"));
                String p_type=rs.getString("producttype");
                String p_name=rs.getString("productname");

                String p_quantity=String.valueOf(rs.getInt("quantity"));              
                String pdate=rs.getString("dateofdonation");
                String D_id=String.valueOf(rs.getInt("D_id"));
                
                                    
                        
                  String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                   
                  DefaultTableModel tblModel=(DefaultTableModel)searchTable.getModel();
                  tblModel.addRow(tbData);
   
            }}
            
               
               
           
        } catch (Exception e) {
            e.printStackTrace();


    }    

// TODO add your handling code here:
    }//GEN-LAST:event_Search_PActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
                
                  // String tbData[]={p_id,p_type,p_name,p_quantity,pdate,D_id};
                  searchTable.setModel(new DefaultTableModel(null,new String [] {"p_id","p_type","p_name","p_quantity","pdate","D_id"}));
                  //tblModel.addRow(tbData);
                   // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=charity_management;selectMethod=cursor", "sa", "123456");

            System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());
            String x=ID.getText();
            
            String ida=id.getText();            
            System.out.println(ida);              
             q=qty.getText();

            Statement statement = connection.createStatement();
            ResultSet rs = statement
            .executeQuery("SELECT D_id,productid , quantity,productname,unit from donationTable WHERE productid ='"+ida+"' ");

            while (rs.next()) {
                String D_id=String.valueOf(rs.getInt("D_id"));
                String productid=String.valueOf(rs.getInt("productid"));
                String q1=String.valueOf(rs.getInt("quantity")); 
                String pname=rs.getString("productname");                 
                String un=rs.getString("unit"); 
                
            //     int result=Integer.parseInt(q1) - Integer.parseInt(q);
                
                System.out.println(D_id);
                System.out.println(productid);
                   System.out.println(q1);
                   
                   long millis=System.currentTimeMillis();  
              java.sql.Date date=new java.sql.Date(millis);  
                   
                     int a=Integer.parseInt(q1);   
                 int b=Integer.parseInt(q);  
                   
                  if(a>=b){    
                   
                Statement statement1 = connection.createStatement();
                statement1.executeUpdate("insert into request (D_id,N_id,P_id,quantity,productname,unit,requestdate)"
                    + " values ('"+D_id+"','"+x+"','"+productid+"','"+q+"','"+pname+"','"+un+"','"+date+"')");

                                               JOptionPane.showMessageDialog(null,"Request Made Sucessfully!");
                                               
                  }
                 else
                 {
                     JOptionPane.showMessageDialog(null,"Invalid");
                 }                                

            }

        }

        catch (Exception e) {
            e.printStackTrace();
        }        // TODO add your handling code h

        

    }//GEN-LAST:event_okActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void productCombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productCombActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productCombActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        String x= ID.getText();
        NeedyTop A = new NeedyTop(x);
        A.setVisible(true);
        setVisible(false);

        //   NeedyTop d=new NeedyTop();
        //    d.show();
        //    dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JTextField ID;
    private javax.swing.JButton Search_P;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok;
    private javax.swing.JComboBox<String> productComb;
    private javax.swing.JTextField qty;
    private javax.swing.JTable searchTable;
    // End of variables declaration//GEN-END:variables
}
